---
# compute-video-demo-ansible
- name: Set up networking
  hosts: local
  gather_facts: False
  vars_files:
    - gce_vars/auth
    - gce_vars/zone
  tasks:
  - name: create a global address
    gcp_compute_global_address:
        name: "globaladdress-globalforwardingrule1"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: globaladdress
  - name: create a instance group
    gcp_compute_instance_group:
        name: "instancegroup-globalforwardingrule"
        zone: "{{zone}}"
        instances:
          - "{{ gcea }}"
          - "{{ gceb }}" 
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: instancegroup
  - name: create a http health check
    gcp_compute_http_health_check:
        name: "httphealthcheck-globalforwardingrule"
        healthy_threshold: 10
        port: 80
        timeout_sec: 2
        unhealthy_threshold: 5
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: healthcheck
  - name: create a backend service
    gcp_compute_backend_service:
        name: "backendservice-globalforwardingrule"
        backends:
        - group: "{{ instancegroup.selfLink }}"
        health_checks:
        - "{{ healthcheck.selfLink }}"
        enable_cdn: true
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: backendservice
  - name: create a url map
    gcp_compute_url_map:
        name: "urlmap-globalforwardingrule"
        default_service: "{{ backendservice }}"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: urlmap
  - name: create a target http proxy
    gcp_compute_target_http_proxy:
        name: "targethttpproxy-globalforwardingrule"
        url_map: "{{ urlmap }}"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: httpproxy
  - name: create a global forwarding rule
    gcp_compute_global_forwarding_rule:
        name: "globalfowardingrule"
        ip_address: "{{ globaladdress.address }}"
        load_balancing_scheme: "EXTERNAL"
        ip_protocol: TCP
        port_range: 80-80
        target: "{{ httpproxy.selfLink }}"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ credentials_file }}"
    register: forwardingrule
  post_tasks:
    - debug:
        msg: "Load balancer IP: {{ forwardingrule['IPAddress'] }}"
